1. Examine magazine company orders' tables by pasting the following code into the editor:
//
SELECT *
FROM orders
LIMIT 5;

SELECT *
FROM subscriptions
LIMIT 5;

SELECT * 
FROM customers
LIMIT 5;

2. Just asking answer to match two separate tables and information within them. 

3.1 Join orders table and subscriptions table and select all columns.
Make sure to join on the subscription_id column.
//
SELECT *
FROM orders
LIMIT 10;

SELECT *
FROM subscriptions
LIMIT 10;

SELECT *
FROM orders
JOIN subscriptions
  ON orders.subscription_id = subscriptions.subscription_id;

3.2 Don’t remove the previous query.
Add a second query after your first one that only selects rows from the join where description is equal to ‘Fashion Magazine’.
// 
    Just add additional code to the bottom:
SELECT *
FROM orders
JOIN subscriptions
ON orders.subscription_id = subscriptions.subscription_id
WHERE subscriptions.description = 'Fashion Magazine';

4.1 Suppose we are working for The Codecademy Times, a newspaper with two types of subscriptions:
print newspaper
online articles
Some users subscribe to just the newspaper, some subscribe to just the online edition, and some subscribe to both.
There is a newspaper table that contains information about the newspaper subscribers.
Count the number of subscribers who get a print newspaper using COUNT()
//
SELECT COUNT(*)
FROM newspaper;

4.2 Don’t remove your previous query.
There is also an online table that contains information about the online subscribers.
Count the number of subscribers who get an online newspaper using COUNT().
//
SELECT COUNT(*)
FROM online;

5.1 Let’s return to our newspaper and online subscribers.
Suppose we want to know how many users subscribe to the print newspaper, but not to the online.
Start by performing a left join of newspaper table and online table on their id columns and selecting all columns.
//
SELECT *                             OR                             SELECT COUNT(*)   
FROM newspaper                                                      FROM newspaper
LEFT JOIN online                                                    LEFT JOIN online
ON newspaper.id = online.id;                                        ON newspaper.id=online.id;

5.2 Don’t remove your previous query.
In order to find which users do not subscribe to the online edition, we need to add a WHERE clause.
Add a second query after your first one that adds the following WHERE clause and condition:
WHERE online.id IS NULL
This will select rows where there was no corresponding row from the online table.
//
SELECT *
FROM newspaper
LEFT JOIN online
ON newspaper.id = online.id
WHERE online.id IS NULL;

6.1. Suppose Columbia University has two tables in their database:
The classes table contains information on the classes that the school offers. Its primary key is id.
The students table contains information on all students in the school. Its primary key is id. It contains 
the foreign key class_id, which corresponds to the primary key of classes.
Perform an inner join of classes and students using the primary and foreign keys described above, and select all the columns.
//
SELECT *
FROM classes
JOIN students
ON classes.id = students.class_id;

7.1 

